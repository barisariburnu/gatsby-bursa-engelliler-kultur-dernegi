{"version":3,"sources":["webpack:///./src/images/banner-bg.png","webpack:///./src/containers/home/style.tsx","webpack:///./src/containers/home/posts/style.tsx","webpack:///./src/containers/home/posts/index.tsx","webpack:///./src/containers/home/banner/style.tsx","webpack:///./src/containers/home/banner/index.tsx","webpack:///./src/containers/home/index.tsx","webpack:///./src/components/feature-post/feature-post.style.tsx","webpack:///./src/components/feature-post/feature-post.tsx","webpack:///./src/pages/index.tsx"],"names":["module","exports","PersonalBlogWrapper","styled","div","BlogPostsWrapper","PostRow","PostGrid","SeeMore","Posts","useStaticQuery","allMarkdownRemark","edges","map","node","title","frontmatter","fields","slug","placeholderColors","setColor","Math","floor","random","length","key","image","cover","childImageSharp","fluid","url","description","excerpt","date","tags","placeholderBG","to","type","BannerWrapper","BannerBG","BannerInner","FeaturePosts","Title","themeGet","Banner","PersonalBlog","props","FeaturedPostWrapper","PostPreview","PostDetails","PostTitle","h1","PostMeta","PostTags","FeaturedPost","className","imageType","addAllClasses","push","join","alt","backgroundColor","fixed","slice","tag","index","defaultProps","HomePage","data","site","siteMetadata"],"mappings":"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","file":"component---src-pages-index-tsx-6c6579cd49690e829805.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/banner-bg-89e76f7823713e7aa0b79586694f8482.png\";","import styled from 'styled-components';\n\nconst PersonalBlogWrapper = styled.div``;\n\nexport default PersonalBlogWrapper;\n","import styled from 'styled-components';\n\nconst BlogPostsWrapper = styled.div`\n  margin: 0 auto;\n  padding-top: 120px;\n  position: relative;\n  @media (min-width: 991px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n`;\nexport const PostRow = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  margin-bottom: 30px;\n  @media (max-width: 990px) {\n    margin-bottom: 20px;\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const PostGrid = styled.div`\n  flex: 0 0 50%;\n  max-width: 50%;\n  padding: 0 20px;\n  margin-bottom: 90px;\n  @media (max-width: 990px) {\n    margin-bottom: 70px;\n  }\n  @media (max-width: 767px) {\n    flex: 0 0 100%;\n    max-width: 100%;\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const SeeMore = styled.div`\n  text-align: center;\n`;\n\nexport default BlogPostsWrapper;\n","import * as React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport Button from '../../../components/button/button';\nimport PostCardModern from '../../../components/post-card-modern/post-card-modern';\nimport BlogPostsWrapper, { PostRow, PostGrid, SeeMore } from './style';\n\ntype PostsProps = {};\n\nconst Posts: React.FunctionComponent<PostsProps> = () => {\n  const Data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: DESC }\n        limit: 6\n      ) {\n        totalCount\n        edges {\n          node {\n            excerpt(pruneLength: 200)\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"DD [<span>] MMM [</span>]\", locale: \"tr\")\n              title\n              description\n              tags\n              cover {\n                childImageSharp {\n                  fluid(maxWidth: 570, maxHeight: 370, quality: 100) {\n                    ...GatsbyImageSharpFluid_noBase64\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const Posts = Data.allMarkdownRemark.edges;\n\n  return (\n    <BlogPostsWrapper>\n      <PostRow>\n        {Posts.map(({ node }: any) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          // Random Placeholder Color\n          const placeholderColors = [\n            '#55efc4',\n            '#81ecec',\n            '#74b9ff',\n            '#a29bfe',\n            '#ffeaa7',\n            '#fab1a0',\n            '#e17055',\n            '#0984e3',\n            '#badc58',\n            '#c7ecee',\n          ];\n          const setColor =\n            placeholderColors[\n            Math.floor(Math.random() * placeholderColors.length)\n            ];\n\n          return (\n            <PostGrid key={node.fields.slug}>\n              <PostCardModern\n                key={node.fields.slug}\n                title={title}\n                image={\n                  node.frontmatter.cover == null\n                    ? null\n                    : node.frontmatter.cover.childImageSharp.fluid\n                }\n                url={node.fields.slug}\n                description={node.excerpt}\n                date={node.frontmatter.date}\n                tags={node.frontmatter.tags}\n                placeholderBG={setColor}\n              />\n            </PostGrid>\n          );\n        })}\n      </PostRow>\n      <SeeMore>\n        <Link to=\"/bizden-haberler/1\">\n          <Button title=\"Daha fazlasını gör\" type=\"submit\" />\n        </Link>\n      </SeeMore>\n    </BlogPostsWrapper>\n  );\n};\n\nexport default Posts;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport BannerBG from '../../../images/banner-bg.png';\n\nexport const BannerWrapper = styled.div`\n  position: relative;\n  padding: 90px 0;\n  background-color: #d96233;\n  background-image: url(${BannerBG});\n  background-size: cover;\n  background-position: center;\n  min-height: 870px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: 1500px) {\n    min-height: 700px;\n    padding: 80px 0;\n  }\n\n  @media (max-width: 990px) {\n    min-height: 600px;\n    padding: 60px 0;\n  }\n\n  @media (max-width: 767px) {\n    min-height: 300px;\n    padding: 40px 0;\n  }\n`;\n\nexport const BannerInner = styled.div`\n  margin: 0 auto;\n  width: 100%;\n\n  @media (min-width: 991px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1170px;\n  }\n\n  @media (max-width: 990px) {\n    padding-left: 45px;\n  }\n\n  @media (max-width: 767px) {\n    padding-left: 25px;\n    padding-right: 25px;\n  }\n`;\n\nexport const FeaturePosts = styled.div`\n  width: 460px;\n  max-width: 100%;\n  background-color: #fff;\n  border-radius: 6px;\n  padding: 45px;\n  @media (max-width: 990px) {\n    width: 400px;\n  }\n\n  @media (max-width: 767px) {\n    padding: 25px;\n  }\n\n  .featured_post {\n    margin-bottom: 30px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const Title = styled.div`\n  color: ${themeGet('colors.textColor', '#292929')};\n  font-size: 15px;\n  font-weight: 500;\n  font-family: ${themeGet('fontFamily.0', \"'Fira Sans',sans-serif\")};\n  letter-spacing: 0.17em;\n  position: relative;\n  margin-bottom: 30px;\n\n  &:after {\n    content: '';\n    width: 80px;\n    height: 1px;\n    background: #292929;\n    display: block;\n    margin-top: 8px;\n  }\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport FeaturePost from '../../../components/feature-post/feature-post';\nimport { BannerWrapper, BannerInner, FeaturePosts, Title } from './style';\n\ntype BannerProps = {};\n\nconst Banner: React.FunctionComponent<BannerProps> = () => {\n  const Data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: DESC }\n        limit: 4\n        filter: { frontmatter: { featured: { eq: true } } }\n      ) {\n        totalCount\n        edges {\n          node {\n            excerpt(pruneLength: 300)\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"DD [<span>] MMM [</span>]\", locale: \"tr\")\n              title\n              description\n              tags\n              cover {\n                childImageSharp {\n                  fluid(maxWidth: 90, maxHeight: 90, quality: 100) {\n                    ...GatsbyImageSharpFluid_noBase64\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const Posts = Data.allMarkdownRemark.edges;\n\n  return (\n    <BannerWrapper>\n      <BannerInner>\n        <FeaturePosts>\n          <Title>Öne Çıkan Gönderiler</Title>\n          {Posts.map(({ node }: any) => {\n            const title = node.frontmatter.title || node.fields.slug;\n            // Random Placeholder Color\n            const placeholderColors = [\n              '#55efc4',\n              '#81ecec',\n              '#74b9ff',\n              '#a29bfe',\n              '#ffeaa7',\n              '#fab1a0',\n              '#e17055',\n              '#0984e3',\n              '#badc58',\n              '#c7ecee',\n            ];\n            const setColor =\n              placeholderColors[\n              Math.floor(Math.random() * placeholderColors.length)\n              ];\n\n            return (\n              <FeaturePost\n                key={node.fields.slug}\n                title={title}\n                image={\n                  node.frontmatter.cover == null\n                    ? null\n                    : node.frontmatter.cover.childImageSharp.fluid\n                }\n                url={node.fields.slug}\n                tags={node.frontmatter.tags}\n                placeholderBG={setColor}\n              />\n            );\n          })}\n        </FeaturePosts>\n      </BannerInner>\n    </BannerWrapper>\n  );\n};\n\nexport default Banner;\n","import * as React from 'react';\nimport PersonalBlogWrapper from './style';\nimport Posts from './posts';\nimport Banner from './banner';\n\ntype PersonalBlogProps = {};\n\nconst PersonalBlog: React.FunctionComponent<PersonalBlogProps> = (props) => {\n  return (\n    <PersonalBlogWrapper {...props}>\n      <Banner />\n      <Posts />\n    </PersonalBlogWrapper>\n  );\n};\n\nexport default PersonalBlog;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const FeaturedPostWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  &:hover {\n    .post_preview {\n      > a {\n        transform: scale(1.1);\n      }\n    }\n  }\n`;\n\nexport const PostPreview = styled.div`\n  flex: 0 0 90px;\n  flex-shrink: 0;\n  margin-right: 15px;\n  overflow: hidden;\n  @media (max-width: 990px) {\n    flex: 0 0 60px;\n  }\n  > a {\n    display: block;\n    transition: 0.15s ease-in-out;\n    transform-origin: top left;\n  }\n`;\n\nexport const PostDetails = styled.div`\n  flex-grow: 1;\n`;\n\nexport const PostTitle = styled.h1`\n  font-size: 18px;\n  font-weight: 700;\n\n  line-height: 1.53;\n  margin-bottom: 0;\n  font-family: ${themeGet('fontFamily.0')};\n\n  @media (max-width: 990px) {\n    font-size: 16px;\n  }\n  @media (max-width: 575px) {\n    font-size: 14px;\n  }\n  a {\n    color: ${themeGet('colors.textColor', '#292929')};\n    transition: 0.15s ease-in-out;\n    &:hover {\n      color: ${themeGet('primary', '#D10068')};\n    }\n  }\n`;\n\nexport const PostMeta = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const PostTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 12px;\n  @media (max-width: 990px) {\n    margin-top: 10px;\n  }\n  @media (max-width: 575px) {\n    margin-top: 8px;\n  }\n\n  a,\n  span {\n    display: block;\n    margin-right: 30px;\n    font-size: 13px;\n    font-weight: 400;\n    color: ${themeGet('primary', '#D10068')};\n    @media (max-width: 990px) {\n      font-size: 13px;\n      margin-right: 25px;\n    }\n  }\n`;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport _ from 'lodash';\nimport Img from 'gatsby-image';\nimport {\n  FeaturedPostWrapper,\n  PostPreview,\n  PostDetails,\n  PostTitle,\n  PostMeta,\n  PostTags,\n} from './feature-post.style';\n\ninterface FeaturedPostProps {\n  image?: any;\n  title: string;\n  url: string;\n  tags?: [];\n  className?: string;\n  imageType?: 'fixed' | 'fluid';\n  placeholderBG?: string;\n}\n\nconst FeaturedPost: React.FunctionComponent<FeaturedPostProps> = ({\n  image,\n  title,\n  url,\n  tags,\n  className,\n  imageType,\n  placeholderBG,\n  ...props\n}) => {\n  // Add all classs to an array\n  const addAllClasses = ['featured_post'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <FeaturedPostWrapper className={addAllClasses.join(' ')} {...props}>\n      {image == null ? null : (\n        <PostPreview className=\"post_preview\">\n          <Link to={url}>\n            {imageType === 'fluid' ? (\n              <Img\n                fluid={image}\n                alt=\"post preview\"\n                backgroundColor={placeholderBG}\n              />\n            ) : (\n              <Img\n                fixed={image}\n                alt=\"post preview\"\n                backgroundColor={placeholderBG}\n              />\n            )}\n          </Link>\n        </PostPreview>\n      )}\n\n      <PostDetails>\n        <PostTitle className=\"post_title\">\n          <Link to={url}>{title}</Link>\n        </PostTitle>\n        <PostMeta>\n          {tags == null ? null : (\n            <PostTags className=\"post_tags\">\n              {tags.slice(0, 2).map((tag: string, index: number) => (\n                <Link\n                  key={index}\n                  to={`/etiket/${_.kebabCase(tag)}/`}\n                >{`#${tag}`}</Link>\n              ))}\n            </PostTags>\n          )}\n        </PostMeta>\n      </PostDetails>\n    </FeaturedPostWrapper>\n  );\n};\n\nFeaturedPost.defaultProps = {\n  imageType: 'fluid',\n};\n\nexport default FeaturedPost;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport PersonalBlog from '../containers/home';\nimport SEO from '../components/seo';\n\nconst HomePage = (props: any) => {\n  const { data } = props;\n\n  return (\n    <Layout>\n      <SEO\n        title={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n      />\n      <PersonalBlog />\n    </Layout>\n  );\n};\n\nexport default HomePage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}