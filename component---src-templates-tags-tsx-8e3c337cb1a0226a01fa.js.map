{"version":3,"sources":["webpack:///./src/templates/tags.tsx"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","title","description","map","node","index","key","fields","slug","frontmatter","url","excerpt","date","tags"],"mappings":"4FAAA,gFAmCeA,UA5BF,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,KACnBC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WAEf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOJ,EAAKK,YAAgBF,EAAL,aAE5B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAUH,GACNG,EAFN,oBAICD,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,EAASC,MAAT,OACT,kBAAC,IAAD,CACEC,IAAKF,EAAKG,OAAOC,KACjBP,MAAOG,EAAKK,YAAYR,MACxBS,IAAKN,EAAKG,OAAOC,KACjBN,YAAaE,EAAKK,YAAYP,aAAeE,EAAKO,QAClDC,KAAMR,EAAKK,YAAYG,KACvBC,KAAMT,EAAKK,YAAYI","file":"component---src-templates-tags-tsx-8e3c337cb1a0226a01fa.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport PostCard from '../components/post-card/post-card';\nimport SEO from '../components/seo';\nimport { TagPostsWrapper, TagPageHeading, TagName } from './templates.style';\n\nconst Tags = ({ pageContext, data }: any) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n\n  return (\n    <Layout>\n      <SEO title={tag} description={`${totalCount} gönderi`} />\n\n      <TagPostsWrapper>\n        <TagPageHeading>\n          <TagName>{tag}</TagName>\n          {`${totalCount} gönderi bulundu`}\n        </TagPageHeading>\n        {edges.map(({ node, index }: any) => (\n          <PostCard\n            key={node.fields.slug}\n            title={node.frontmatter.title}\n            url={node.fields.slug}\n            description={node.frontmatter.description || node.excerpt}\n            date={node.frontmatter.date}\n            tags={node.frontmatter.tags}\n          />\n        ))}\n      </TagPostsWrapper>\n    </Layout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD [<span>] MMMM [</span>]\", locale: \"tr\")\n            title\n            tags\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}