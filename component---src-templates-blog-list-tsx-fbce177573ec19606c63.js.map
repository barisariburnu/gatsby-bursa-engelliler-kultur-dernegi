{"version":3,"sources":["webpack:///./src/templates/templates.style.tsx","webpack:///./src/components/pagination/pagination.style.tsx","webpack:///./src/components/pagination/pagination.tsx","webpack:///./src/templates/blog-list.tsx"],"names":["BlogPostsWrapper","styled","div","RelatedPostWrapper","RelatedPostTitle","h2","themeGet","RelatedPostItems","RelatedPostItem","TagPostsWrapper","TagPageHeading","TagName","h1","BlogPostFooter","BlogPostComment","PostShare","BlogPostDetailsWrapper","BlogDetailsContent","PostTags","PostRow","PostGrid","PaginationWrapper","PrevPage","NextPage","PageNumber","Pagination","prevLink","nextLink","currentPage","totalPage","className","props","to","aria-label","BlogList","Posts","data","allMarkdownRemark","edges","pageContext","numPages","isFirst","isLast","prevPage","toString","nextPage","PrevLink","NextLink","title","map","node","placeholderColors","setColor","Math","floor","random","length","key","fields","slug","frontmatter","image","cover","childImageSharp","fluid","url","description","excerpt","date","tags","placeholderBG"],"mappings":"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","file":"component---src-templates-blog-list-tsx-fbce177573ec19606c63.js","sourcesContent":["import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const BlogPostsWrapper = styled.div`\n  margin: 0 auto;\n  padding-top: 120px;\n  position: relative;\n\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n\n  .post_card {\n    margin-bottom: 120px;\n    @media (max-width: 990px) {\n      margin-bottom: 90px;\n    }\n    @media (max-width: 575px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const RelatedPostWrapper = styled.div`\n  margin: 0 auto;\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n`;\n\nexport const RelatedPostTitle = styled.h2`\n  color: ${themeGet('colors.textColor', '#292929')};\n  font-size: 16px;\n  font-weight: 500;\n  font-family: ${themeGet('fontFamily.0', \"'Fira Sans',sans-serif\")};\n  letter-spacing: 0.17em;\n  position: relative;\n  margin-bottom: 30px;\n\n  &:after {\n    content: '';\n    width: 68px;\n    height: 1px;\n    background: #292929;\n    display: block;\n    margin-top: 8px;\n  }\n`;\n\nexport const RelatedPostItems = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -15px;\n`;\n\nexport const RelatedPostItem = styled.div`\n  flex: 0 0 33.333333333%;\n  max-width: 33.333333333%;\n  padding: 0 15px;\n  @media (max-width: 575px) {\n    flex: 0 0 100%;\n    max-width: 100%;\n    &:nth-child(n + 2) {\n      margin-top: 50px;\n    }\n  }\n  .post_card {\n    &:hover {\n      .post_preview {\n        a {\n          transform: scale(1.05);\n        }\n      }\n    }\n\n    .post_preview {\n      margin-bottom: 16px;\n      overflow: hidden;\n      a {\n        display: block;\n        transition: 0.25s ease-in-out;\n      }\n      &:before {\n        filter: blur(10px);\n      }\n    }\n    .post_title {\n      font-size: 21px;\n      a {\n        display: block;\n        white-space: nowrap;\n        width: 100%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      @media (max-width: 1400px) {\n        font-size: 19px;\n      }\n      @media (max-width: 1200px) {\n        font-size: 17px;\n      }\n      @media (max-width: 990px) {\n        font-size: 15px;\n      }\n    }\n    .post_content {\n      max-width: 100%;\n    }\n\n    .post_tags {\n      margin-top: 20px;\n      a {\n        @media (max-width: 990px) {\n          font-size: 12px;\n          margin-right: 15px;\n        }\n      }\n    }\n  }\n`;\nexport const TagPostsWrapper = styled.div`\n  margin: 0 auto;\n  padding-top: 120px;\n  position: relative;\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1200px) {\n    width: 1050px;\n  }\n  @media (min-width: 1400px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 30px 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n\n  .post_card {\n    margin-bottom: 120px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n    @media (max-width: 990px) {\n      margin-bottom: 80px;\n    }\n    @media (max-width: 575px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\nexport const TagPageHeading = styled.div`\n  padding-left: 210px;\n  font-size: 15px;\n  font-weight: 400;\n  margin-bottom: 120px;\n  position: relative;\n  @media (max-width: 1200px) {\n    padding-left: 160px;\n  }\n  @media (max-width: 990px) {\n    padding-left: 0;\n    font-size: 13px;\n    margin-bottom: 80px;\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 60px;\n  }\n\n  &:after {\n    content: '';\n    display: block;\n    width: 90px;\n    height: 1px;\n    background: #292929;\n    margin-top: 15px;\n  }\n`;\n\nexport const TagName = styled.h1`\n  font-size: 30px;\n  font-weight: 700;\n  color: ${themeGet('colors.primary', '#D10068')};\n  margin-bottom: 8px;\n  @media (max-width: 990px) {\n    font-size: 26px;\n  }\n  @media (max-width: 575px) {\n    font-size: 22px;\n  }\n`;\nexport const BlogPostFooter = styled.div`\n  margin: 0 auto;\n  width: 870px;\n  max-width: 100%;\n  padding-top: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  @media (max-width: 990px) {\n    padding-top: 40px;\n  }\n`;\n\nexport const BlogPostComment = styled.div`\n  margin: 0 auto;\n  width: 870px;\n  max-width: 100%;\n  padding-top: 80px;\n  @media (max-width: 990px) {\n    padding-top: 60px;\n  }\n`;\n\nexport const PostShare = styled.div`\n  display: flex;\n  align-items: center;\n  > span {\n    flex-shrink: 0;\n  }\n  > div,\n  .react-share__ShareButton {\n    cursor: pointer;\n    margin-left: 25px;\n    font-size: 22px;\n    outline: 0;\n    color: ${themeGet('colors.textColor', '#292929')};\n    transition: 0.15s ease-in-out;\n    @media (max-width: 767px) {\n      font-size: 18px;\n      margin-left: 20px;\n    }\n    &:hover {\n      color: ${themeGet('colors.primary', '#D10068')};\n    }\n    svg {\n      display: block;\n    }\n  }\n`;\nexport const BlogPostDetailsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  padding: 90px 0 120px 0;\n  @media (min-width: 990px) {\n    width: 900px;\n  }\n  @media (min-width: 1100px) {\n    width: 1050px;\n  }\n  @media (min-width: 1250px) {\n    width: 1170px;\n  }\n  @media (max-width: 990px) {\n    padding: 80px 45px 0 45px;\n  }\n  @media (max-width: 575px) {\n    padding: 60px 25px 0 25px;\n  }\n`;\n\nexport const BlogDetailsContent = styled.div`\n  flex: 0 0 calc(100% - 360px);\n  max-width: calc(100% - 360px);\n  padding-right: 60px;\n\n  @media (max-width: 1249px) {\n    flex: 0 0 calc(100% - 320px);\n    max-width: calc(100% - 320px);\n    padding-right: 50px;\n  }\n  @media (max-width: 1100px) {\n    flex: 0 0 calc(100% - 280px);\n    max-width: calc(100% - 280px);\n    padding-right: 40px;\n  }\n\n  @media (max-width: 990px) {\n    flex: 0 0 calc(100% - 220px);\n    max-width: calc(100% - 220px);\n    padding-right: 30px;\n  }\n\n  @media (max-width: 767px) {\n    flex: 0 0 100%;\n    max-width: 100%;\n    padding-right: 0;\n  }\n`;\n\nexport const PostTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (max-width: 575px) {\n    display: none;\n  }\n\n  a {\n    display: block;\n    margin-right: 30px;\n    font-size: 14px;\n    font-weight: 400;\n    color: ${themeGet('primary', '#D10068')};\n    @media (max-width: 990px) {\n      font-size: 13px;\n      margin-right: 25px;\n    }\n  }\n`;\n\nexport const PostRow = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  margin-bottom: 60px;\n  @media (max-width: 990px) {\n    margin-bottom: 40px;\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const PostGrid = styled.div`\n  flex: 0 0 50%;\n  max-width: 50%;\n  padding: 0 20px;\n  margin-bottom: 90px;\n  @media (max-width: 990px) {\n    margin-bottom: 70px;\n  }\n  @media (max-width: 767px) {\n    flex: 0 0 100%;\n    max-width: 100%;\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 50px;\n  }\n`;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const PrevPage = styled.div`\n  min-width: 32px;\n  a {\n    width: 32px;\n    height: 32px;\n    color: ${themeGet('colors.textColor', '#292929')};\n    border-radius: 50%;\n    background-color: #f3f3f3;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 0.15s ease-in-out;\n    svg {\n      display: block;\n    }\n    &:hover {\n      color: #fff;\n      background-color: ${themeGet('colors.primary', '#D10068')};\n    }\n  }\n`;\n\nexport const NextPage = styled.div`\n  min-width: 32px;\n  a {\n    width: 32px;\n    height: 32px;\n    color: ${themeGet('colors.textColor', '#292929')};\n    border-radius: 50%;\n    background-color: #f3f3f3;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 0.15s ease-in-out;\n    svg {\n      display: block;\n    }\n    &:hover {\n      color: #fff;\n      background-color: ${themeGet('colors.primary', '#D10068')};\n    }\n  }\n`;\n\nexport const PageNumber = styled.div``;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io';\nimport {\n  PaginationWrapper,\n  PrevPage,\n  NextPage,\n  PageNumber,\n} from './pagination.style';\n\ntype PaginationProps = {\n  prevLink?: string | undefined | null | boolean;\n  nextLink?: string | undefined | null | boolean;\n  currentPage: string;\n  totalPage: string;\n  className?: string;\n};\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({\n  prevLink,\n  nextLink,\n  currentPage,\n  totalPage,\n  className,\n  ...props\n}) => {\n  return (\n    <PaginationWrapper {...props} className={className}>\n      <PrevPage>\n        {prevLink && (\n          <Link to={`${prevLink}`} aria-label=\"Önceki\">\n            <IoMdArrowRoundBack />\n          </Link>\n        )}\n      </PrevPage>\n\n      <PageNumber>{`${currentPage} / ${totalPage}`}</PageNumber>\n\n      <NextPage>\n        {nextLink && (\n          <Link to={`${nextLink}`} aria-label=\"Sonraki\">\n            <IoMdArrowRoundForward />\n          </Link>\n        )}\n      </NextPage>\n    </PaginationWrapper>\n  );\n};\n\nexport default Pagination;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport PostCardModern from '../components/post-card-modern/post-card-modern';\nimport Pagination from '../components/pagination/pagination';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { BlogPostsWrapper, PostRow, PostGrid } from './templates.style';\n\nconst BlogList = (props: any) => {\n  const { data } = props;\n  const Posts = data.allMarkdownRemark.edges;\n  const { currentPage, numPages } = props.pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage =\n    currentPage - 1 === 1 ? '/bizden-haberler/1' : `/bizden-haberler/${(currentPage - 1).toString()}`;\n  const nextPage = `/bizden-haberler/${(currentPage + 1).toString()}`;\n  const PrevLink = !isFirst && prevPage;\n  const NextLink = !isLast && nextPage;\n\n  return (\n    <Layout>\n      <SEO title={`Sayfa ${currentPage}`} />\n\n      <BlogPostsWrapper>\n        <PostRow>\n          {Posts.map(({ node }: any) => {\n            // Random Placeholder Color\n            const placeholderColors = [\n              '#55efc4',\n              '#81ecec',\n              '#74b9ff',\n              '#a29bfe',\n              '#ffeaa7',\n              '#fab1a0',\n              '#e17055',\n              '#0984e3',\n              '#badc58',\n              '#c7ecee',\n            ];\n            const setColor =\n              placeholderColors[\n              Math.floor(Math.random() * placeholderColors.length)\n              ];\n            return (\n              <PostGrid>\n                <PostCardModern\n                  key={node.fields.slug}\n                  title={node.frontmatter.title || node.fields.slug}\n                  image={\n                    node.frontmatter.cover == null\n                      ? null\n                      : node.frontmatter.cover.childImageSharp.fluid\n                  }\n                  url={node.fields.slug}\n                  description={node.frontmatter.description || node.excerpt}\n                  date={node.frontmatter.date}\n                  tags={node.frontmatter.tags}\n                  placeholderBG={setColor}\n                />\n              </PostGrid>\n            );\n          })}\n        </PostRow>\n        <Pagination\n          prevLink={PrevLink}\n          nextLink={NextLink}\n          currentPage={`${currentPage}`}\n          totalPage={`${numPages}`}\n        />\n      </BlogPostsWrapper>\n    </Layout>\n  );\n};\n\nexport default BlogList;\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    sitePage {\n      path\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD [<span>] MMMM [</span>]\", locale: \"tr\")\n            title\n            description\n            tags\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 1170, quality: 90) {\n                  ...GatsbyImageSharpFluid_noBase64\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}